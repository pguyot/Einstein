// ==============================
// Fichier:			TException.h
// Projet:			K
// Ecrit par:		Paul Guyot (pguyot@kallisys.net)
// 
// Créé le:			10/6/2005
// Tabulation:		4 espaces
// 
// ***** BEGIN LICENSE BLOCK *****
// Version: MPL 1.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// The Original Code is TException.h.
// 
// The Initial Developer of the Original Code is Paul Guyot.
// Portions created by the Initial Developer are Copyright (C) 2005 the
// Initial Developer. All Rights Reserved.
// 
// Contributor(s):
//   Paul Guyot <pguyot@kallisys.net> (original author)
// 
// ***** END LICENSE BLOCK *****
// ===========
// $Id: TException.h,v 1.1 2005/06/10 23:01:00 pguyot Exp $
// ===========

#ifndef _TEXCEPTION_H
#define _TEXCEPTION_H

#include <K/Defines/KDefinitions.h>
#include <exception>

///
/// Class for an exception.
///
/// \author Paul Guyot <pguyot@kallisys.net>
/// \version $Revision: 1.1 $
///
/// \test	aucun test défini.
///
class TException : public std::exception
{
public:
	///
	/// Default constructor.
	///
	TException( void );

	///
	/// Constructor from a file name and a line number.
	///
	/// \param inFileName	name of the file where the exception was thrown.
	/// \param inLine		line number where the exception was thrown.
	///
	TException(
			const char* inFileName,
			KUInt32 inLine );

	///
	/// Destructor.
	///
	virtual ~TException( void ) throw ();

	///
	/// Default what message implementation.
	///
	/// \return the name of the class (using rtti)
	///
	virtual const char* what ( void ) const throw ();

	///
	/// Accessor on the file name where the exception was thrown.
	///
	/// \return	the name of the file (normally a constant generated by the
	///			compiler).
	///
	inline	const char*		GetFileName( void ) const
		{
			return mFileName;
		}

	///
	/// Accessor on the line number where the exception was thrown.
	///
	/// \return	the line number.
	///
	inline	KUInt32			GetLine( void ) const
		{
			return mLine;
		}

	///
	/// Copy constructor.
	///
	/// \param inCopy		object to copy.
	///
	TException( const TException& inCopy );

private:
	///
	/// Opérateur d'assignation volontairement indisponible.
	///
	/// \param inCopy		objet à copier
	///
	TException& operator = ( const TException& inCopy );

	/// \name Variables
	const char*				mFileName;	///< File name where the exception
										///< was thrown.
	KUInt32					mLine;		///< Line number.
};

#endif
		// _TEXCEPTION_H

// ======================================================== //
// Pascal is a language for children wanting to be naughty. //
//                 -- Dr. Kasi Ananthanarayanan             //
// ======================================================== //
